import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'io.fabric.tools:gradle:1.21.1'
    }
}

//apply plugin: 'com.android.application'
//apply plugin: 'io.fabric'
//
//android {
//        compileSdkVersion 23
//        buildToolsVersion "23.0.2"
//
//    defaultConfig {
//        applicationId "com.labs.okey.freeride"
//        minSdkVersion 16
//        targetSdkVersion 23
//        versionCode 4
//        versionName "4.7"
//        multiDexEnabled true
//    }
//    sourceSets {
//        main {
//            jni.srcDirs = []
//        }
//    }
//
//    buildTypes {
//
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
//}

apply plugin: 'com.android.model.application'
model {

    compileOptions.with {
        sourceCompatibility = JavaVersion.VERSION_1_7
        targetCompatibility = JavaVersion.VERSION_1_7
    }

    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.2"
        packagingOptions.excludes = ['LICENSE.txt']

        defaultConfig.with {
            applicationId = "com.labs.okey.freeride"
            minSdkVersion.apiLevel = 16
            targetSdkVersion.apiLevel = 23
            versionCode = 4
            versionName = "4.7"
            multiDexEnabled = true
        }
    }

    android.ndk {
        moduleName = "fastcvUtils"

        abiFilters += ["armeabi", "armeabi-v7a"]

        // Link with static OpenCV libraries: the order is important!
        // The following order taken from OpenCV.mk
        def opencv_modules = ["shape", "stitching", "objdetect", "superres", "videostab", "calib3d", "features2d", "highgui", "videoio", "imgcodecs", "video", "photo", "ml", "imgproc", "flann", "core", "hal", "tbb"]

        ldLibs += ["log", "stdc++", "dl", "z", "jnigraphics"]

        abiFilters.each { targetAbi ->
            println targetAbi

            opencv_modules.each { module ->
                if (module.equals("tbb")) {
                    ldLibs += file(projectDir).absolutePath + "/src/main/jniLibs/" + targetAbi + "/lib" + module + ".a"
                } else {
                    ldLibs += file(projectDir).absolutePath + "/src/main/jniLibs/" + targetAbi + "/libopencv_" + module + ".a"
                }
            }
        }

        cppFlags += "-Werror"
        cppFlags += "--debug"
        cppFlags += "-frtti"
        cppFlags += "-fexceptions"
        cppFlags += "-D_DEBUG"

        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            def opencvhome = System.getenv("OPENCV_HOME")
            cppFlags += "-I" + opencvhome + "\\native\\jni\\include"
        } else {
            cppFlags += "-I/Users/Oleg/Downloads/OpenCV-android-sdk/sdk/native/jni/include"
        }
        cppFlags += "-std=c++11" // for lambda-expressions

        stl = "gnustl_static"

    }

    android.buildTypes {
        release {
            minifyEnabled = true
            proguardFiles += file('proguard-rules.pro')
            debuggable = false
            ndk.with {
                debuggable = false
            }
        }

        debug {
            debuggable = true
            ndk.with {
                debuggable = true
            }
        }
    }

//    android.productFlavors {
//        create("arm") {
//            ndk.with {
//
//                abiFilters += "armeabi"
//                println "*** building for arm"
//            }
//
//        }
//
//        create("armv7") {
//            ndk.with {
//
//                abiFilters += "armeabi-v7a"
//                println "*** building for armv7"
//            }
//
//        }
//    }

}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
    maven { url "http://dl.bintray.com/glomadrian/maven" }
    flatDir {
        dirs 'aars'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    //testCompile 'junit:junit:4.12'
    //testCompile 'com.android.support:appcompat-v7:(23,24]'

    // See here: https://developers.google.com/android/guides/setup
    // for detailed discussion about setting up GMS
    compile('com.afollestad.material-dialogs:core:0.8.5.3@aar') {
        transitive = true
    }
    
    compile project(':libraries:opencv')
    //compile project(':volley')
    compile 'com.android.volley:volley:1.0.0'
    compile project(':livesdk')

    // Twitter
//    compile('com.twitter.sdk.android:twitter:1.10.0@aar') {
//        transitive = true;
//    }
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true
    }
//    compile('com.digits.sdk.android:digits:1.9.1@aar') {
//        transitive = true;
//    }
    //    compile 'com.github.glomadrian:loadingballs:1.1@aar'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.facebook.android:facebook-android-sdk:4.9.0'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.google.guava:guava:18.0'
    compile 'com.microsoft.azure:azure-mobile-services-android-sdk:2.0.3'
    compile 'com.microsoft.azure:azure-notifications-handler:1.0.1@jar'
    compile 'com.microsoft.azure.android:azure-storage-android:0.7.0@aar'
    compile 'com.google.android.gms:play-services-location:8.4.0'
    compile 'com.google.android.gms:play-services-gcm:8.4.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:support-annotations:23.1.1'
    compile 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'
    compile 'net.steamcrafted:load-toast:1.0.9'
    compile 'com.microsoft.projectoxford:face:1.0.0'
    compile 'com.github.brnunes:swipeablerecyclerview:1.0.1'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.1.+'
    compile 'com.pkmmte.view:circularimageview:1.1'

}

